{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Michael Castelein","text":""},{"location":"#hey-im-michael","title":"Hey, I\u2019m Michael \ud83d\udc4b","text":"<p>Data Scientist | Machine Learning Engineer | Entrepreneur</p> <p>I turn complex data problems into clear, actionable solutions. Currently focused on building projects in AI, freelancing, and online education.</p> <p>View Portfolio </p>"},{"location":"#about-me","title":"About Me","text":"<p>I'm Michael \u2014 a Dutch-American data scientist and entrepreneur with experience across analytics, forecasting, and machine learning. I\u2019ve worked with startups and global companies, and I\u2019m passionate about using data to make smarter decisions and build useful things.</p> <ul> <li>\ud83e\udde0 Master\u2019s in Econometrics (Quantitative Finance)</li> <li>\u2699\ufe0f Python, SQL, Sklearn, TensorFlow, Statsmodels, PyTorch</li> <li>\ud83d\udcca Forecasting, Regression, NLP, Time Series, LLMs</li> <li>\ud83c\udf0d Worldschooling &amp; Remote Work Enthusiast</li> </ul> <p>I\u2019m currently:</p> <ul> <li>\ud83e\uddea Running AI experiments and freelancing</li> <li>\ud83c\udf93 Building a language-learning app with my partner</li> <li>\ud83c\udfcb\ufe0f Improving my fitness and exploring Asia</li> </ul>"},{"location":"#recent-projects","title":"Recent Projects","text":"<ul> <li> Energy Price Forecasting Thesis</li> </ul> <p>Built a machine learning pipeline to forecast 1-day-ahead energy prices for California.   Compared SARIMAX, LSTM, GRU, Random Forest, and Linear Regression with &amp; without spatial lags.   Evaluated with RMSE, MAE, and R\u00b2. Resulted in 10x faster predictions and better accuracy.</p> <ul> <li> Notecard App for HSK1 Chinese Vocabulary</li> </ul> <p>Created an interactive Chinese vocab trainer using Streamlit and Python.   Uses images instead of translations to encourage direct mental associations.</p> <ul> <li> English Learning Business</li> </ul> <p>Scaling a tutoring business for Chinese students. Built CRM in Notion, optimized outreach, and started onboarding other teachers.</p>"},{"location":"#lets-connect","title":"Let\u2019s Connect","text":"<p>If you\u2019re interested in:</p> <ul> <li>Collaborating on data/AI projects</li> <li>Learning how to freelance in tech</li> <li>Hiring a data scientist or AI engineer</li> </ul> <p>Then let\u2019s chat!</p> <p>Lets grab a digital coffee\u2615! </p>"},{"location":"blog/","title":"Blog","text":""},{"location":"blog/2024/09/15/opening-vs-code-workspace-files-with-cursor-on-macos/","title":"Opening VS Code Workspace Files with Cursor on macOS","text":"<p>I recently switched to Cursor, a new AI-enhanced code editor that's been getting a lot of attention lately. While it's been a great experience so far, there was one small hiccup on macOS with <code>.code-workspace</code> files. Here's how I solved it.</p>"},{"location":"blog/2024/09/15/opening-vs-code-workspace-files-with-cursor-on-macos/#why-cursor","title":"Why Cursor?","text":"<p>If you're a developer, you might have noticed Cursor IDE popping up everywhere. It's a fork of VS Code but with added AI capabilities like autocomplete, inline edits, and a composer. After five years with VS Code, I decided to give Cursor a try. The transition was seamless since Cursor is built on top of VS Code, so all my settings, themes, and extensions worked right out of the box.</p>"},{"location":"blog/2024/09/15/opening-vs-code-workspace-files-with-cursor-on-macos/#the-macos-workspace-issue","title":"The macOS Workspace Issue","text":"<p>One issue I ran into was with opening <code>.code-workspace</code> files on macOS. By default, Cursor couldn't open these files directly, which was pretty annoying. Fortunately, there's a straightforward fix.</p>"},{"location":"blog/2024/09/15/opening-vs-code-workspace-files-with-cursor-on-macos/#how-to-make-cursor-the-default-for-workspace-files","title":"How to Make Cursor the Default for Workspace Files","text":"<p>Here's how to make Cursor the default application for <code>.code-workspace</code> files:</p> <ol> <li>Locate a <code>.code-workspace</code> file in Finder.</li> <li>Right-click on the file and select \u201cGet Info\u201d from the context menu.</li> <li>In the \u201cGet Info\u201d window, look for the \u201cOpen with:\u201d section.</li> <li>Click on the selection field and choose \"Other\".</li> <li>In the Finder selection window, change the setting \"Enable\" to \"All Applications\" instead of the default \"Recommended Applications\"(1)</li> <li>You can now select Cursor from the list.</li> <li>After making the selection, click \"Change All...\" to make Cursor the default for all your <code>.code-workspace</code> files.</li> </ol> <ol> <li>This is where you need to change the setting to \"All Applications\".     </li> </ol>"},{"location":"blog/2024/03/20/getting-started-with-uv-the-ultra-fast-python-package-manager/","title":"Getting Started with UV: The Ultra-Fast Python Package Manager","text":"<p>If you're tired of slow package installations and complex dependency management in Python, uv might be exactly what you need. Written in Rust, uv is a blazing-fast package manager that aims to replace pip, pip-tools, pipx, poetry, and more. Let's dive into why it's awesome and how to get started.</p>"},{"location":"blog/2024/03/20/getting-started-with-uv-the-ultra-fast-python-package-manager/#why-uv","title":"Why UV?","text":"<p>After years of wrestling with different Python package managers, uv caught my attention for a few key reasons:</p> <ul> <li>It's 10-100x faster than pip</li> <li>Single tool to replace multiple package managers</li> <li>Universal lockfile support for consistent environments</li> <li>Built-in Python version management</li> </ul>"},{"location":"blog/2024/03/20/getting-started-with-uv-the-ultra-fast-python-package-manager/#installation","title":"Installation","text":"<p>Getting started with uv is straightforward. Here are the installation methods I recommend for each platform:</p>"},{"location":"blog/2024/03/20/getting-started-with-uv-the-ultra-fast-python-package-manager/#macos-using-homebrew","title":"macOS (using Homebrew)","text":"<pre><code>brew install uv\n</code></pre>"},{"location":"blog/2024/03/20/getting-started-with-uv-the-ultra-fast-python-package-manager/#linuxmacos-using-curl","title":"Linux/macOS (using curl)","text":"<pre><code>curl -LsSf https://astral.sh/uv/install.sh | sh\n</code></pre>"},{"location":"blog/2024/03/20/getting-started-with-uv-the-ultra-fast-python-package-manager/#windows-using-powershell","title":"Windows (using PowerShell)","text":"<pre><code>powershell -c \"irm https://astral.sh/uv/install.ps1 | iex\"\n</code></pre>"},{"location":"blog/2024/03/20/getting-started-with-uv-the-ultra-fast-python-package-manager/#managing-python-versions","title":"Managing Python Versions","text":"<p>While you probably already have Python installed on your system, uv can manage Python versions for you. Here's how:</p> <pre><code># List available Python versions\nuv python list\n\n# Install a specific version\nuv python install 3.12\n\n# Use a specific version for your project\nuv python pin 3.12\n</code></pre>"},{"location":"blog/2024/03/20/getting-started-with-uv-the-ultra-fast-python-package-manager/#creating-a-new-project","title":"Creating a New Project","text":"<p>Let's create a new project and see uv in action:</p> <pre><code># Create a new project directory\nmkdir my-awesome-project\ncd my-awesome-project\n\n# Initialize a new project\nuv init\n\n# Create and activate a virtual environment\nuv venv\nsource .venv/bin/activate  # On Windows: .venv\\Scripts\\activate\n</code></pre> <p>This creates a basic project structure with a <code>pyproject.toml</code> file, which is similar to package.json for Node.js developers.</p>"},{"location":"blog/2024/03/20/getting-started-with-uv-the-ultra-fast-python-package-manager/#managing-dependencies","title":"Managing Dependencies","text":"<p>Here's where uv really shines. Let's add some common packages:</p> <pre><code># Add a single package\nuv add requests\n\n# Add multiple packages with specific versions\nuv add 'fastapi&gt;=0.100.0' pytest\n\n# Add development dependencies\nuv add --dev black ruff\n</code></pre>"},{"location":"blog/2024/03/20/getting-started-with-uv-the-ultra-fast-python-package-manager/#working-with-requirementstxt","title":"Working with requirements.txt","text":"<p>If you're working with an existing project that uses requirements.txt, uv has got you covered:</p> <pre><code># Install from requirements.txt\nuv pip install -r requirements.txt\n\n# Generate a requirements.txt from your project\nuv pip freeze &gt; requirements.txt\n</code></pre>"},{"location":"blog/2024/03/20/getting-started-with-uv-the-ultra-fast-python-package-manager/#understanding-the-lock-file","title":"Understanding the Lock File","text":"<p>One of uv's best features is its lockfile system. When you run <code>uv add</code> or <code>uv sync</code>, it creates/updates a <code>uv.lock</code> file that ensures consistent installations across all environments. This is similar to package-lock.json in Node.js or Cargo.lock in Rust.</p> <pre><code># Manually update the lockfile\nuv lock\n\n# Sync your environment with the lockfile\nuv sync\n</code></pre>"},{"location":"blog/2024/03/20/getting-started-with-uv-the-ultra-fast-python-package-manager/#daily-usage-tips","title":"Daily Usage Tips","text":"<p>Here are some common commands you'll use regularly:</p> <pre><code># Remove a package\nuv remove requests\n\n# Update a specific package\nuv lock --upgrade-package requests\n\n# Run a Python script in your environment\nuv run script.py\n\n# Install a tool globally (like pipx)\nuv tool install ruff\n</code></pre>"},{"location":"blog/2024/03/20/getting-started-with-uv-the-ultra-fast-python-package-manager/#why-i-switched-to-uv","title":"Why I Switched to UV","text":"<p>After using uv for several weeks, the speed difference is incredible. What used to take minutes with pip now takes seconds. The unified interface for managing both packages and Python versions has simplified my workflow significantly.</p> <p>Here's a quick comparison installing a complex package:</p> <pre><code># With pip\ntime pip install tensorflow  # ~2-3 minutes\n\n# With uv\ntime uv pip install tensorflow  # ~15-20 seconds\n</code></pre>"},{"location":"blog/2024/03/20/getting-started-with-uv-the-ultra-fast-python-package-manager/#next-steps","title":"Next Steps","text":"<p>To get the most out of uv, I recommend:</p> <ol> <li>Adding <code>.venv</code> to your <code>.gitignore</code></li> <li>Committing both <code>pyproject.toml</code> and <code>uv.lock</code> to version control</li> <li>Using <code>uv sync</code> instead of <code>pip install</code> to ensure consistent environments</li> </ol> <p>Uv is actively maintained by the team behind Ruff (another amazing Python tool), and it's quickly becoming the go-to package manager in the Python ecosystem. You can find more resources and documentation here.</p>"},{"location":"portfolio/","title":"Featured Projects","text":"<p>Welcome to my portfolio of data science and AI projects. Each project demonstrates my expertise in delivering impactful solutions to real-world business challenges.</p> <ul> <li> <p>AI Customer Care Bot for Dev X</p> <p>An AI-powered chatbot solution for Dev X that enables customer service transformation, featuring Slack integration and sub-3 second response times. Built with OpenAI, Pinecone, and Azure cloud infrastructure to achieve 100% accuracy on initial datasets.</p> </li> <li> <p>Enterprise Chatbot for Company Y</p> <p>A private ChatGPT-like tool for the Company Y that revolutionizes mobility data analysis by combining structured SQL data with unstructured policy documents. Built with OpenAI and modern cloud architecture for comprehensive public sector policy evaluation.</p> </li> </ul>"},{"location":"portfolio/projects/project-1/","title":"AI Customer Care Bot for Dev X","text":"Portfolio Best Practices <p>This is a simplified example project. When creating your own portfolio:</p> <ul> <li>Include detailed technical challenges and how you solved them</li> <li>Add specific metrics and KPIs that demonstrate impact</li> <li>Show code snippets of interesting implementations</li> <li>Include architecture diagrams and system designs</li> <li>Document your decision-making process</li> <li>Highlight your specific contributions to the project</li> <li>Add visuals of the final product (if possible)</li> </ul> <p>Case Study Summary</p> <p>Client: Dev X Website: devx.com Industry: Software Development  </p> <p>Impact Metrics:</p> <ul> <li>90% reduction in customer service overhead (projected)</li> <li>100% accuracy on initial evaluation datasets</li> <li>&lt; 3 second response time for customer inquiries</li> <li>Successfully transitioned 12 CSRs to account management roles</li> <li>$240,000 annual cost savings in customer support operations</li> </ul> <p>Dev X aims to reduce its customer service overhead by 90% over the next three years through AI, enabling their staff to focus on more rewarding roles and build better relationships with clients.</p>"},{"location":"portfolio/projects/project-1/#challenge","title":"Challenge","text":"<p>Their strategy involved transitioning customer service representatives to more rewarding account manager roles to enhance client relationships. They needed an AI solution that could efficiently handle routine customer inquiries while integrating seamlessly with their existing workflows.</p>"},{"location":"portfolio/projects/project-1/#our-approach","title":"Our Approach","text":"<p>We developed an AI chatbot specifically for Dev X's internal use, designed to assist customer service representatives in quickly accessing information. The solution was seamlessly integrated within Slack, the platform already used by their team, allowing for minimal disruption to existing workflows.</p>"},{"location":"portfolio/projects/project-1/#results-impact","title":"Results &amp; Impact","text":"<ul> <li>Response time under 3 seconds</li> <li>100% accuracy on initial evaluation datasets</li> <li>Successful integration with existing Slack workflows</li> <li>Currently expanding knowledge base coverage</li> <li>Simple activation through Slack mentions</li> </ul>"},{"location":"portfolio/projects/project-1/#solution-overview","title":"Solution Overview","text":"<p>Baseline OpenAI end-to-end chat reference architecture</p>"},{"location":"portfolio/projects/project-1/#tech-stack","title":"Tech Stack","text":"<ul> <li>OpenAI</li> <li>Pinecone vector database</li> <li>Slack API integration</li> <li>Microsoft Azure cloud infrastructure</li> <li>Python backend services</li> <li>FastAPI for RESTful endpoints</li> <li>Docker containerization</li> <li>GitHub Actions for CI/CD pipeline</li> </ul>"},{"location":"portfolio/projects/project-1/#additional-context","title":"Additional Context","text":"<ul> <li>Timeline: 3 months</li> <li>Team Size: 2 people (AI Engineer and Data Engineer)</li> <li>Role: AI Engineer</li> <li>Close collaboration with customer service team</li> <li>Ongoing knowledge base expansion</li> <li>Future plans include implementing feedback mechanism</li> </ul> <ul> <li> <p> Let's have a virtual coffee together!</p> <p>Want to see if we're a match? Let's have a chat and find out. Schedule a free 30-minute strategy session to discuss your AI challenges and explore how we can work together.</p> <p>Book Free Intro Call </p> </li> </ul>"},{"location":"portfolio/projects/project-2/","title":"Enterprise Chatbot for the Company Y","text":"Portfolio Best Practices <p>This is a simplified example project. When creating your own portfolio:</p> <ul> <li>Include detailed technical challenges and how you solved them</li> <li>Add specific metrics and KPIs that demonstrate impact</li> <li>Show code snippets of interesting implementations</li> <li>Include architecture diagrams and system designs</li> <li>Document your decision-making process</li> <li>Highlight your specific contributions to the project</li> <li>Add visuals of the final product (if possible)</li> </ul> <p>Case Study Summary</p> <p>Client: Dev X Website: devx.com Industry: Software Development  </p> <p>Impact Metrics:</p> <ul> <li>90% reduction in customer service overhead (projected)</li> <li>100% accuracy on initial evaluation datasets</li> <li>&lt; 3 second response time for customer inquiries</li> <li>Successfully transitioned 12 CSRs to account management roles</li> <li>$240,000 annual cost savings in customer support operations</li> </ul> <p>Company Y an AI project featuring a private ChatGPT-like tool, streamlining mobility data analysis and advancing digital innovation in public sector policy evaluation.</p>"},{"location":"portfolio/projects/project-2/#challenge","title":"Challenge","text":"<p>The regional data team at Company Y faced the challenge of analyzing complex mobility data, including cars, bridges, traffic, and cyclists. Tasked with assessing policy compliance and the impact of changes, they struggled with data scattered across multiple systems, such as the Dexter portal's structured SQL data and various policy documents. This dispersion made analysis laborious, prompting the Province to explore how digitization and AI could streamline the process and foster innovation.</p>"},{"location":"portfolio/projects/project-2/#our-approach","title":"Our Approach","text":"<p>To tackle this challenge, we developed a custom-built AI solution similar to a \"private version of ChatGPT.\" This tool was designed to access and analyze large volumes of PDF documents and structured data exported from the Dexter database. By enabling a ChatGPT-like interaction, users could query this diverse data pool in a conversational manner, leveraging the AI to gain company-specific insights.</p>"},{"location":"portfolio/projects/project-2/#results-impact","title":"Results &amp; Impact","text":"<ul> <li>Successfully integrated structured SQL data and unstructured PDF documents</li> <li>Featured in major company meetings</li> <li>Enabled conversational querying of complex mobility data</li> <li>Streamlined policy compliance assessment</li> <li>Enhanced decision-making through comprehensive data analysis</li> </ul>"},{"location":"portfolio/projects/project-2/#solution-overview","title":"Solution Overview","text":"<p>Baseline OpenAI end-to-end chat reference architecture</p>"},{"location":"portfolio/projects/project-2/#tech-stack","title":"Tech Stack","text":"<ul> <li>OpenAI</li> <li>Pinecone vector database</li> <li>Microsoft Azure cloud infrastructure</li> <li>Python backend services</li> <li>FastAPI for RESTful endpoints</li> <li>Docker containerization</li> <li>GitHub Actions for CI/CD pipeline</li> </ul>"},{"location":"portfolio/projects/project-2/#additional-context","title":"Additional Context","text":"<ul> <li>Timeline: 3 months</li> <li>Team Size: 2 people</li> <li>Role: AI Engineer</li> <li>Expertise in custom chatbot development</li> <li>Specialization in retrieval-augmented generation</li> <li>Focus on OpenAI model integration</li> </ul> <ul> <li> <p> Let's have a virtual coffee together!</p> <p>Want to see if we're a match? Let's have a chat and find out. Schedule a free 30-minute strategy session to discuss your AI challenges and explore how we can work together.</p> <p>Book Free Intro Call </p> </li> </ul>"},{"location":"blog/archive/2024/","title":"2024","text":""},{"location":"blog/category/tools/","title":"Tools","text":""},{"location":"blog/category/quick-tips/","title":"Quick Tips","text":""},{"location":"blog/category/python/","title":"Python","text":""},{"location":"blog/category/development/","title":"Development","text":""}]}